{"ast":null,"code":"var _jsxFileName = \"/Users/salt-dev/Desktop/reacttodo/React-todo-app-/todoreact/src/ components/TodoCard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoCard = _ref => {\n  let {\n    tasksState,\n    setTasksState,\n    task\n  } = _ref;\n\n  const removeTaskHandler = () => {\n    setTasksState(tasksState.filter(todo => todo.id !== task.id));\n  };\n\n  const completedTasksHandler = () => {\n    setTasksState(tasksState.map(todo => {\n      if (todo.id === task.id) {\n        return { ...todo,\n          done: !todo.done\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `todo__item--not-done ${task.done ? \"todo__item--done\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo__output\",\n      onClick: completedTasksHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: task.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), task.done && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: removeTaskHandler,\n      className: \"form__remove-btn\",\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoCard;\nexport default TodoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoCard\");","map":{"version":3,"sources":["/Users/salt-dev/Desktop/reacttodo/React-todo-app-/todoreact/src/ components/TodoCard.js"],"names":["React","TodoCard","tasksState","setTasksState","task","removeTaskHandler","filter","todo","id","completedTasksHandler","map","done","Title","Description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,QAAyC;AAAA,MAAxC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA;AAA7B,GAAwC;;AAExD,QAAMC,iBAAiB,GAAG,MAAM;AAC9BF,IAAAA,aAAa,CAACD,UAAU,CAACI,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,IAAI,CAACI,EAA7C,CAAD,CAAb;AACD,GAFD;;AAGA,QAAMC,qBAAqB,GAAG,MAAM;AAClCN,IAAAA,aAAa,CACXD,UAAU,CAACQ,GAAX,CAAgBH,IAAD,IAAU;AACvB,UAAIA,IAAI,CAACC,EAAL,KAAYJ,IAAI,CAACI,EAArB,EAAyB;AACvB,eAAO,EACL,GAAGD,IADE;AAELI,UAAAA,IAAI,EAAE,CAACJ,IAAI,CAACI;AAFP,SAAP;AAID;;AACD,aAAOJ,IAAP;AACD,KARD,CADW,CAAb;AAWD,GAZD;;AAaA,sBACE;AAAI,IAAA,SAAS,EAAG,wBAAuBH,IAAI,CAACO,IAAL,GAAY,kBAAZ,GAAiC,EAAG,EAA3E;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAEF,qBAAvC;AAAA,8BACE;AAAA,kBAAKL,IAAI,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIR,IAAI,CAACS;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGT,IAAI,CAACO,IAAL,iBACC;AAAQ,MAAA,OAAO,EAAEN,iBAAjB;AAAoC,MAAA,SAAS,EAAC,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7BD;;KAAMJ,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\nconst TodoCard = ({ tasksState, setTasksState, task }) => {\n    \n  const removeTaskHandler = () => {\n    setTasksState(tasksState.filter((todo) => todo.id !== task.id));\n  };\n  const completedTasksHandler = () => {\n    setTasksState(\n      tasksState.map((todo) => {\n        if (todo.id === task.id) {\n          return {\n            ...todo,\n            done: !todo.done,\n          };\n        }\n        return todo;\n      })\n    );\n  };\n  return (\n    <li className={`todo__item--not-done ${task.done ? \"todo__item--done\" : \"\"}`}>\n      <div className=\"todo__output\" onClick={completedTasksHandler}>\n        <h2>{task.Title}</h2>\n        <p>{task.Description}</p>\n      </div>\n      {task.done && (\n        <button onClick={removeTaskHandler} className=\"form__remove-btn\">Remove</button>\n      )}\n    </li>\n  );\n};\n\nexport default TodoCard;\n"]},"metadata":{},"sourceType":"module"}